name: Supervised Classification, features: dresses-sales
{'X_train': {'cols': 0.14176245210727967, 'rows': 0.8074712643678161}, 'X_valid': {'cols': 0.12689393939393942, 'rows': 0.7727272727272727}, 'X_test': {'cols': 0.14733333333333334, 'rows': 0.8}}
dataset sizes
(360, 12) (88, 12) (125, 12)
dropped dataset sizes
(70, 12) (20, 12) (25, 12)
key: 847, k: 1/4, dataset: 23381, missing: None, impute: None
{'d_model': 61, 'embedding_size': 92, 'embedding_layers': 1, 'encoder_heads': 2, 'encoder_layers': 4, 'decoder_heads': 2, 'decoder_layers': 6, 'net_size': 34, 'net_layers': 4, 'max_steps': 3192, 'learning_rate': 0.001, 'batch_size': 8, 'early_stop': 0.197731413502771, 'noise_std': 1.0283899606241371}
MAP
2 device(s)
optimizer: adam, lr: 0.0010000000474974513, batch_size=8
  0%|                                                                                                                                                                                                                                                                                                | 0/70 [00:00<?, ?it/s]Traceback (most recent call last):
  File "/home/jahan/Missingness/train.py", line 143, in <module>
    metrics_df, perc_missing = run(
  File "/home/jahan/Missingness/benchmarkaux/openmlrun.py", line 145, in run
    model.fit(X_train, y_train)
  File "/home/jahan/Missingness/UAT/models/scikit_wrapper.py", line 152, in fit
    params, history, rng = training_loop(
  File "/home/jahan/Missingness/UAT/training/train.py", line 205, in training_loop
    metric_store_master = metrics(params_, X_test[:temp_row, ...], y_test[:temp_row], key_)
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/_src/traceback_util.py", line 162, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/_src/api.py", line 522, in cache_miss
    out_flat = xla.xla_call(
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/core.py", line 1836, in bind
    return call_bind(self, fun, *args, **params)
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/core.py", line 1852, in call_bind
    outs = top_trace.process_call(primitive, fun_, tracers, params)
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/core.py", line 683, in process_call
    return primitive.impl(f, *tracers, **params)
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/_src/dispatch.py", line 196, in _xla_call_impl
    compiled_fun = xla_callable(fun, device, backend, name, donated_invars,
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/linear_util.py", line 286, in memoized_fun
    ans = call(fun, *args)
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/_src/dispatch.py", line 245, in _xla_callable_uncached
    return lower_xla_callable(fun, device, backend, name, donated_invars, False,
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/_src/profiler.py", line 312, in wrapper
    return func(*args, **kwargs)
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/_src/dispatch.py", line 290, in lower_xla_callable
    jaxpr, out_type, consts = pe.trace_to_jaxpr_final2(
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/_src/profiler.py", line 312, in wrapper
    return func(*args, **kwargs)
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/interpreters/partial_eval.py", line 1959, in trace_to_jaxpr_final2
    jaxpr, out_type, consts = trace_to_subjaxpr_dynamic2(fun, main)
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/interpreters/partial_eval.py", line 1920, in trace_to_subjaxpr_dynamic2
    ans = fun.call_wrapped(*in_tracers_)
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/linear_util.py", line 168, in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
  File "/home/jahan/Missingness/UAT/training/train.py", line 72, in metrics
    out = model_fun(params, x_batch, rng, True, False)
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/_src/traceback_util.py", line 162, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/_src/api.py", line 1557, in vmap_f
    out_flat = batching.batch(
  File "/home/jahan/.conda/envs/jax/lib/python3.10/site-packages/jax/linear_util.py", line 168, in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
  File "/home/jahan/Missingness/UAT/models/models.py", line 670, in apply_fun
    zk_f = net1(params["ln1"], x) + params["x_shift"] #  (f, ndim)
  File "/home/jahan/Missingness/UAT/models/layers.py", line 389, in apply_fun
    h = activation(layer_1(params["l1"], inputs))
jax._src.traceback_util.UnfilteredStackTrace: TypeError: tuple indices must be integers or slices, not str
The stack trace below excludes JAX-internal frames.
The preceding is the original exception that occurred, unmodified.
--------------------
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File "/home/jahan/Missingness/train.py", line 143, in <module>
    metrics_df, perc_missing = run(
  File "/home/jahan/Missingness/benchmarkaux/openmlrun.py", line 145, in run
    model.fit(X_train, y_train)
  File "/home/jahan/Missingness/UAT/models/scikit_wrapper.py", line 152, in fit
    params, history, rng = training_loop(
  File "/home/jahan/Missingness/UAT/training/train.py", line 205, in training_loop
    metric_store_master = metrics(params_, X_test[:temp_row, ...], y_test[:temp_row], key_)
  File "/home/jahan/Missingness/UAT/training/train.py", line 72, in metrics
    out = model_fun(params, x_batch, rng, True, False)
  File "/home/jahan/Missingness/UAT/models/models.py", line 670, in apply_fun
    zk_f = net1(params["ln1"], x) + params["x_shift"] #  (f, ndim)
  File "/home/jahan/Missingness/UAT/models/layers.py", line 389, in apply_fun
    h = activation(layer_1(params["l1"], inputs))
TypeError: tuple indices must be integers or slices, not str